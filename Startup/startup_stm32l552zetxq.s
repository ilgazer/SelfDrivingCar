/**
 ******************************************************************************
 * @file      startup_stm32l552zetxq.s
 * @author    Auto-generated by STM32CubeIDE
 * @brief     STM32L552ZETxQ device vector table for GCC toolchain.
 *            This module performs:
 *                - Set the initial SP
 *                - Set the initial PC == Reset_Handler,
 *                - Set the vector table entries with the exceptions ISR address
 *                - Branches to main in the C library (which eventually
 *                  calls main()).
 ******************************************************************************
 * @attention
 *
 * Copyright (c) ${year} STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

.syntax unified
.cpu cortex-m33
.fpu softvfp
.thumb

.global g_pfnVectors
.global Default_Handler

/* start address for the initialization values of the .data section.
defined in linker script */
.word _sidata
/* start address for the .data section. defined in linker script */
.word _sdata
/* end address for the .data section. defined in linker script */
.word _edata
/* start address for the .bss section. defined in linker script */
.word _sbss
/* end address for the .bss section. defined in linker script */
.word _ebss

/**
 * @brief  This is the code that gets called when the processor first
 *          starts execution following a reset event. Only the absolutely
 *          necessary set is performed, after which the application
 *          supplied main() routine is called.
 * @param  None
 * @retval : None
*/

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
  mov   sp, r0          /* set stack pointer */
/* Call the clock system initialization function.*/
  bl  SystemInit

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
  ldr r1, =_edata
  ldr r2, =_sidata
  movs r3, #0
  b LoopCopyDataInit

CopyDataInit:
  ldr r4, [r2, r3]
  str r4, [r0, r3]
  adds r3, r3, #4

LoopCopyDataInit:
  adds r4, r0, r3
  cmp r4, r1
  bcc CopyDataInit

/* Zero fill the bss segment. */
  ldr r2, =_sbss
  ldr r4, =_ebss
  movs r3, #0
  b LoopFillZerobss

FillZerobss:
  str  r3, [r2]
  adds r2, r2, #4

LoopFillZerobss:
  cmp r2, r4
  bcc FillZerobss

/* Call static constructors */
  bl __libc_init_array
/* Call the application's entry point.*/
  bl main

LoopForever:
    b LoopForever

  .size Reset_Handler, .-Reset_Handler

/**
 * @brief  This is the code that gets called when the processor receives an
 *         unexpected interrupt.  This simply enters an infinite loop, preserving
 *         the system state for examination by a debugger.
 *
 * @param  None
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
  .size Default_Handler, .-Default_Handler

/******************************************************************************
*
* The STM32L552ZETxQ vector table.  Note that the proper constructs
* must be placed on this to ensure that it ends up at physical address
* 0x0000.0000.
*
******************************************************************************/
  .section .isr_vector,"a",%progbits
  .type g_pfnVectors, %object
  .size g_pfnVectors, .-g_pfnVectors

g_pfnVectors:
  .word _estack
  .word Reset_Handler
  .word NMI_Handler
  .word HardFault_Handler
  .word	MemManage_Handler
  .word	BusFault_Handler
  .word	UsageFault_Handler
  .word	SecureFault_Handler
  .word	0
  .word	0
  .word	0
  .word	SVC_Handler
  .word	DebugMon_Handler
  .word	0
  .word	PendSV_Handler
  .word	SysTick_Handler
  .word	WWDG_IRQHandler         			/* Window Watchdog interrupt                     */
  .word	PVD_PVM_IRQHandler      			/* PVD/PVM1/PVM2/PVM3/PVM4 through EXTI          */
  .word	RTC_IRQHandler          			/* RTC global interrupts (EXTI line 17)          */
  .word	RTC_S_IRQHandler        			/* RTC secure global interrupts (EXTI line 18)   */
  .word	TAMP_IRQHandler         			/* TAMPTamper global interrupt (EXTI line 19)    */
  .word	TAMP_S_IRQHandler       			/* Tamper secure global interrupt (EXTI line 20) */
  .word	FLASH_IRQHandler        			/* Flash global interrupt                        */
  .word	FLASH_S_IRQHandler      			/* Flash memory secure global interrupt          */
  .word	GTZC_IRQHandler         			/* TZIC secure global interrupt                  */
  .word	RCC_IRQHandler          			/* RCC global interrupt                          */
  .word	RCC_S_IRQHandler        			/* RCC SECURE GLOBAL INTERRUPT                   */
  .word	EXTI0_IRQHandler        			/* EXTI line0 interrupt                          */
  .word	EXTI1_IRQHandler        			/* EXTI line1 interrupt                          */
  .word	EXTI2_IRQHandler        			/* EXTI line2 interrupt                          */
  .word	EXTI3_IRQHandler        			/* EXTI line3 interrupt                          */
  .word	EXTI4_IRQHandler        			/* EXTI line4 interrupt                          */
  .word	EXTI5_IRQHandler        			/* EXTI line5 interrupt                          */
  .word	EXTI6_IRQHandler        			/* EXTI line6 interrupt                          */
  .word	EXTI7_IRQHandler        			/* EXTI line7 interrupt                          */
  .word	EXTI8_IRQHandler        			/* EXTI line8 interrupt                          */
  .word	EXTI9_IRQHandler        			/* EXTI line9 interrupt                          */
  .word	EXTI10_IRQHandler       			/* EXTI line10 interrupt                         */
  .word	EXTI11_IRQHandler       			/* EXTI line11 interrupt                         */
  .word	EXTI12_IRQHandler       			/* EXTI line12 interrupt                         */
  .word	EXTI13_IRQHandler       			/* EXTI line13 interrupt                         */
  .word	EXTI14_IRQHandler       			/* EXTI line14 interrupt                         */
  .word	EXTI15_IRQHandler       			/* EXTI line15 interrupt                         */
  .word	DMAMUX1_OVR_IRQHandler  			/* DMAMUX overrun interrupt                      */
  .word	DMAMUX1_OVR_S_IRQHandler			/* DMAMUX1 secure overRun interrupt              */
  .word	DMA1_Channel1_IRQHandler			/* DMA1 Channel1 global interrupt                */
  .word	DMA1_Channel2_IRQHandler			/* DMA1 Channel2 global interrupt                */
  .word	DMA1_Channel3_IRQHandler			/* DMA1 Channel3 interrupt                       */
  .word	DMA1_Channel4_IRQHandler			/* DMA1 Channel4 interrupt                       */
  .word	DMA1_Channel5_IRQHandler			/* DMA1 Channel5 interrupt                       */
  .word	DMA1_Channel6_IRQHandler			/* DMA1 Channel6 interrupt                       */
  .word	DMA1_Channel7_IRQHandler			/* DMA1 Channel 7 interrupt                      */
  .word	DMA1_Channel8_IRQHandler			/* DMA1_Channel8                                 */
  .word	ADC1_2_IRQHandler       			/* ADC1_2 global interrupt                       */
  .word	DAC_IRQHandler          			/* DAC global interrupt                          */
  .word	FDCAN1_IT0_IRQHandler   			/* FDCAN1 Interrupt 0                            */
  .word	FDCAN1_IT1_IRQHandler   			/* FDCAN1 Interrupt 1                            */
  .word	TIM1_BRK_IRQHandler     			/* TIM1 Break                                    */
  .word	TIM1_UP_IRQHandler      			/* TIM1 Update                                   */
  .word	TIM1_TRG_COM_IRQHandler 			/* TIM1 Trigger and Commutation                  */
  .word	TIM1_CC_IRQHandler      			/* TIM1 Capture Compare interrupt                */
  .word	TIM2_IRQHandler         			/* TIM2 global interrupt                         */
  .word	TIM3_IRQHandler         			/* TIM3 global interrupt                         */
  .word	TIM4_IRQHandler         			/* TIM4 global interrupt                         */
  .word	TIM5_IRQHandler         			/* TIM5 global interrupt                         */
  .word	TIM6_IRQHandler         			/* TIM6 global interrupt                         */
  .word	TIM7_IRQHandler         			/* TIM7 global interrupt                         */
  .word	TIM8_BRK_IRQHandler     			/* TIM8 Break Interrupt                          */
  .word	TIM8_UP_IRQHandler      			/* TIM8 Update Interrupt                         */
  .word	TIM8_TRG_COM_IRQHandler 			/* TIM8 Trigger and Commutation Interrupt        */
  .word	TIM8_CC_IRQHandler      			/* TIM8 Capture Compare Interrupt                */
  .word	I2C1_EV_IRQHandler      			/* I2C1 event interrupt                          */
  .word	I2C1_ER_IRQHandler      			/* I2C1 error interrupt                          */
  .word	I2C2_EV_IRQHandler      			/* I2C2 event interrupt                          */
  .word	I2C2_ER_IRQHandler      			/* I2C2 error interrupt                          */
  .word	SPI1_IRQHandler         			/* SPI1 global interrupt                         */
  .word	SPI2_IRQHandler         			/* SPI2 global interrupt                         */
  .word	USART1_IRQHandler       			/* USART1 global interrupt                       */
  .word	USART2_IRQHandler       			/* USART2 global interrupt                       */
  .word	USART3_IRQHandler       			/* USART3 global interrupt                       */
  .word	UART4_IRQHandler        			/* UART4 global interrupt                        */
  .word	UART5_IRQHandler        			/* UART5 global interrupt                        */
  .word	LPUART1_IRQHandler      			/* LPUART1 global interrupt                      */
  .word	LPTIM1_IRQHandler       			/* LP TIM1 interrupt                             */
  .word	LPTIM2_IRQHandler       			/* LP TIM2 interrupt                             */
  .word	TIM15_IRQHandler        			/* TIM15 global interrupt                        */
  .word	TIM16_IRQHandler        			/* TIM16 global interrupt                        */
  .word	TIM17_IRQHandler        			/* TIM17 global interrupt                        */
  .word	COMP_IRQHandler         			/* COMP1 and COMP2 interrupts                    */
  .word	USB_FS_IRQHandler       			/* USB FS global interrupt                       */
  .word	CRS_IRQHandler          			/* Clock recovery system global interrupt        */
  .word	FMC_IRQHandler          			/* FMC global interrupt                          */
  .word	OCTOSPI1_IRQHandler     			/* OCTOSPI1 global interrupt                     */
  .word	0                       			/* Reserved                                      */
  .word	SDMMC1_IRQHandler       			/* SDMMC1 global interrupt                       */
  .word	0                       			/* Reserved                                      */
  .word	DMA2_CH1_IRQHandler     			/* DMA2_CH1                                      */
  .word	DMA2_CH2_IRQHandler     			/* DMA2_CH2                                      */
  .word	DMA2_CH3_IRQHandler     			/* DMA2_CH3                                      */
  .word	DMA2_CH4_IRQHandler     			/* DMA2_CH4                                      */
  .word	DMA2_CH5_IRQHandler     			/* DMA2_CH5                                      */
  .word	DMA2_CH6_IRQHandler     			/* DMA2_CH6                                      */
  .word	DMA2_CH7_IRQHandler     			/* DMA2_CH7                                      */
  .word	DMA2_CH8_IRQHandler     			/* DMA2_CH8                                      */
  .word	I2C3_EV_IRQHandler      			/* I2C3 event interrupt                          */
  .word	I2C3_ER_IRQHandler      			/* I2C3 error interrupt                          */
  .word	SAI1_IRQHandler         			/* SAI1 global interrupt                         */
  .word	SAI2_IRQHandler         			/* SAI2 global interrupt                         */
  .word	TSC_IRQHandler          			/* TSC global interrupt                          */
  .word	0                       			/* Reserved                                      */
  .word	RNG_IRQHandler          			/* RNG global interrupt                          */
  .word	0                       			/* Reserved                                      */
  .word	HASH_IRQHandler         			/* HASH interrupt                                */
  .word	0                       			/* Reserved                                      */
  .word	LPTIM3_IRQHandler       			/* LPTIM3                                        */
  .word	SPI3_IRQHandler         			/* SPI3                                          */
  .word	I2C4_ER_IRQHandler      			/* I2C4 error interrupt                          */
  .word	I2C4_EV_IRQHandler      			/* I2C4 event interrupt                          */
  .word	DFSDM1_FLT0_IRQHandler  			/* DFSDM1_FLT0 global interrupt                  */
  .word	DFSDM1_FLT1_IRQHandler  			/* DFSDM1_FLT1 global interrupt                  */
  .word	DFSDM1_FLT2_IRQHandler  			/* DFSDM1_FLT2 global interrupt                  */
  .word	DFSDM1_FLT3_IRQHandler  			/* DFSDM1_FLT3 global interrupt                  */
  .word	UCPD1_IRQHandler        			/* UCPD global interrupt                         */
  .word	ICACHE_IRQHandler       			/* ICACHE                                        */

/*******************************************************************************
*
* Provide weak aliases for each Exception handler to the Default_Handler.
* As they are weak aliases, any function with the same name will override
* this definition.
*
*******************************************************************************/

	.weak	NMI_Handler
	.thumb_set NMI_Handler,Default_Handler

	.weak	HardFault_Handler
	.thumb_set HardFault_Handler,Default_Handler

	.weak	MemManage_Handler
	.thumb_set MemManage_Handler,Default_Handler

	.weak	BusFault_Handler
	.thumb_set BusFault_Handler,Default_Handler

	.weak	UsageFault_Handler
	.thumb_set UsageFault_Handler,Default_Handler

	.weak	SecureFault_Handler
	.thumb_set SecureFault_Handler,Default_Handler

	.weak	SVC_Handler
	.thumb_set SVC_Handler,Default_Handler

	.weak	DebugMon_Handler
	.thumb_set DebugMon_Handler,Default_Handler

	.weak	PendSV_Handler
	.thumb_set PendSV_Handler,Default_Handler

	.weak	SysTick_Handler
	.thumb_set SysTick_Handler,Default_Handler

	.weak	WWDG_IRQHandler
	.thumb_set WWDG_IRQHandler,Default_Handler

	.weak	PVD_PVM_IRQHandler
	.thumb_set PVD_PVM_IRQHandler,Default_Handler

	.weak	RTC_IRQHandler
	.thumb_set RTC_IRQHandler,Default_Handler

	.weak	RTC_S_IRQHandler
	.thumb_set RTC_S_IRQHandler,Default_Handler

	.weak	TAMP_IRQHandler
	.thumb_set TAMP_IRQHandler,Default_Handler

	.weak	TAMP_S_IRQHandler
	.thumb_set TAMP_S_IRQHandler,Default_Handler

	.weak	FLASH_IRQHandler
	.thumb_set FLASH_IRQHandler,Default_Handler

	.weak	FLASH_S_IRQHandler
	.thumb_set FLASH_S_IRQHandler,Default_Handler

	.weak	GTZC_IRQHandler
	.thumb_set GTZC_IRQHandler,Default_Handler

	.weak	RCC_IRQHandler
	.thumb_set RCC_IRQHandler,Default_Handler

	.weak	RCC_S_IRQHandler
	.thumb_set RCC_S_IRQHandler,Default_Handler

	.weak	EXTI0_IRQHandler
	.thumb_set EXTI0_IRQHandler,Default_Handler

	.weak	EXTI1_IRQHandler
	.thumb_set EXTI1_IRQHandler,Default_Handler

	.weak	EXTI2_IRQHandler
	.thumb_set EXTI2_IRQHandler,Default_Handler

	.weak	EXTI3_IRQHandler
	.thumb_set EXTI3_IRQHandler,Default_Handler

	.weak	EXTI4_IRQHandler
	.thumb_set EXTI4_IRQHandler,Default_Handler

	.weak	EXTI5_IRQHandler
	.thumb_set EXTI5_IRQHandler,Default_Handler

	.weak	EXTI6_IRQHandler
	.thumb_set EXTI6_IRQHandler,Default_Handler

	.weak	EXTI7_IRQHandler
	.thumb_set EXTI7_IRQHandler,Default_Handler

	.weak	EXTI8_IRQHandler
	.thumb_set EXTI8_IRQHandler,Default_Handler

	.weak	EXTI9_IRQHandler
	.thumb_set EXTI9_IRQHandler,Default_Handler

	.weak	EXTI10_IRQHandler
	.thumb_set EXTI10_IRQHandler,Default_Handler

	.weak	EXTI11_IRQHandler
	.thumb_set EXTI11_IRQHandler,Default_Handler

	.weak	EXTI12_IRQHandler
	.thumb_set EXTI12_IRQHandler,Default_Handler

	.weak	EXTI13_IRQHandler
	.thumb_set EXTI13_IRQHandler,Default_Handler

	.weak	EXTI14_IRQHandler
	.thumb_set EXTI14_IRQHandler,Default_Handler

	.weak	EXTI15_IRQHandler
	.thumb_set EXTI15_IRQHandler,Default_Handler

	.weak	DMAMUX1_OVR_IRQHandler
	.thumb_set DMAMUX1_OVR_IRQHandler,Default_Handler

	.weak	DMAMUX1_OVR_S_IRQHandler
	.thumb_set DMAMUX1_OVR_S_IRQHandler,Default_Handler

	.weak	DMA1_Channel1_IRQHandler
	.thumb_set DMA1_Channel1_IRQHandler,Default_Handler

	.weak	DMA1_Channel2_IRQHandler
	.thumb_set DMA1_Channel2_IRQHandler,Default_Handler

	.weak	DMA1_Channel3_IRQHandler
	.thumb_set DMA1_Channel3_IRQHandler,Default_Handler

	.weak	DMA1_Channel4_IRQHandler
	.thumb_set DMA1_Channel4_IRQHandler,Default_Handler

	.weak	DMA1_Channel5_IRQHandler
	.thumb_set DMA1_Channel5_IRQHandler,Default_Handler

	.weak	DMA1_Channel6_IRQHandler
	.thumb_set DMA1_Channel6_IRQHandler,Default_Handler

	.weak	DMA1_Channel7_IRQHandler
	.thumb_set DMA1_Channel7_IRQHandler,Default_Handler

	.weak	DMA1_Channel8_IRQHandler
	.thumb_set DMA1_Channel8_IRQHandler,Default_Handler

	.weak	ADC1_2_IRQHandler
	.thumb_set ADC1_2_IRQHandler,Default_Handler

	.weak	DAC_IRQHandler
	.thumb_set DAC_IRQHandler,Default_Handler

	.weak	FDCAN1_IT0_IRQHandler
	.thumb_set FDCAN1_IT0_IRQHandler,Default_Handler

	.weak	FDCAN1_IT1_IRQHandler
	.thumb_set FDCAN1_IT1_IRQHandler,Default_Handler

	.weak	TIM1_BRK_IRQHandler
	.thumb_set TIM1_BRK_IRQHandler,Default_Handler

	.weak	TIM1_UP_IRQHandler
	.thumb_set TIM1_UP_IRQHandler,Default_Handler

	.weak	TIM1_TRG_COM_IRQHandler
	.thumb_set TIM1_TRG_COM_IRQHandler,Default_Handler

	.weak	TIM1_CC_IRQHandler
	.thumb_set TIM1_CC_IRQHandler,Default_Handler

	.weak	TIM2_IRQHandler
	.thumb_set TIM2_IRQHandler,Default_Handler

	.weak	TIM3_IRQHandler
	.thumb_set TIM3_IRQHandler,Default_Handler

	.weak	TIM4_IRQHandler
	.thumb_set TIM4_IRQHandler,Default_Handler

	.weak	TIM5_IRQHandler
	.thumb_set TIM5_IRQHandler,Default_Handler

	.weak	TIM6_IRQHandler
	.thumb_set TIM6_IRQHandler,Default_Handler

	.weak	TIM7_IRQHandler
	.thumb_set TIM7_IRQHandler,Default_Handler

	.weak	TIM8_BRK_IRQHandler
	.thumb_set TIM8_BRK_IRQHandler,Default_Handler

	.weak	TIM8_UP_IRQHandler
	.thumb_set TIM8_UP_IRQHandler,Default_Handler

	.weak	TIM8_TRG_COM_IRQHandler
	.thumb_set TIM8_TRG_COM_IRQHandler,Default_Handler

	.weak	TIM8_CC_IRQHandler
	.thumb_set TIM8_CC_IRQHandler,Default_Handler

	.weak	I2C1_EV_IRQHandler
	.thumb_set I2C1_EV_IRQHandler,Default_Handler

	.weak	I2C1_ER_IRQHandler
	.thumb_set I2C1_ER_IRQHandler,Default_Handler

	.weak	I2C2_EV_IRQHandler
	.thumb_set I2C2_EV_IRQHandler,Default_Handler

	.weak	I2C2_ER_IRQHandler
	.thumb_set I2C2_ER_IRQHandler,Default_Handler

	.weak	SPI1_IRQHandler
	.thumb_set SPI1_IRQHandler,Default_Handler

	.weak	SPI2_IRQHandler
	.thumb_set SPI2_IRQHandler,Default_Handler

	.weak	USART1_IRQHandler
	.thumb_set USART1_IRQHandler,Default_Handler

	.weak	USART2_IRQHandler
	.thumb_set USART2_IRQHandler,Default_Handler

	.weak	USART3_IRQHandler
	.thumb_set USART3_IRQHandler,Default_Handler

	.weak	UART4_IRQHandler
	.thumb_set UART4_IRQHandler,Default_Handler

	.weak	UART5_IRQHandler
	.thumb_set UART5_IRQHandler,Default_Handler

	.weak	LPUART1_IRQHandler
	.thumb_set LPUART1_IRQHandler,Default_Handler

	.weak	LPTIM1_IRQHandler
	.thumb_set LPTIM1_IRQHandler,Default_Handler

	.weak	LPTIM2_IRQHandler
	.thumb_set LPTIM2_IRQHandler,Default_Handler

	.weak	TIM15_IRQHandler
	.thumb_set TIM15_IRQHandler,Default_Handler

	.weak	TIM16_IRQHandler
	.thumb_set TIM16_IRQHandler,Default_Handler

	.weak	TIM17_IRQHandler
	.thumb_set TIM17_IRQHandler,Default_Handler

	.weak	COMP_IRQHandler
	.thumb_set COMP_IRQHandler,Default_Handler

	.weak	USB_FS_IRQHandler
	.thumb_set USB_FS_IRQHandler,Default_Handler

	.weak	CRS_IRQHandler
	.thumb_set CRS_IRQHandler,Default_Handler

	.weak	FMC_IRQHandler
	.thumb_set FMC_IRQHandler,Default_Handler

	.weak	OCTOSPI1_IRQHandler
	.thumb_set OCTOSPI1_IRQHandler,Default_Handler

	.weak	SDMMC1_IRQHandler
	.thumb_set SDMMC1_IRQHandler,Default_Handler

	.weak	DMA2_CH1_IRQHandler
	.thumb_set DMA2_CH1_IRQHandler,Default_Handler

	.weak	DMA2_CH2_IRQHandler
	.thumb_set DMA2_CH2_IRQHandler,Default_Handler

	.weak	DMA2_CH3_IRQHandler
	.thumb_set DMA2_CH3_IRQHandler,Default_Handler

	.weak	DMA2_CH4_IRQHandler
	.thumb_set DMA2_CH4_IRQHandler,Default_Handler

	.weak	DMA2_CH5_IRQHandler
	.thumb_set DMA2_CH5_IRQHandler,Default_Handler

	.weak	DMA2_CH6_IRQHandler
	.thumb_set DMA2_CH6_IRQHandler,Default_Handler

	.weak	DMA2_CH7_IRQHandler
	.thumb_set DMA2_CH7_IRQHandler,Default_Handler

	.weak	DMA2_CH8_IRQHandler
	.thumb_set DMA2_CH8_IRQHandler,Default_Handler

	.weak	I2C3_EV_IRQHandler
	.thumb_set I2C3_EV_IRQHandler,Default_Handler

	.weak	I2C3_ER_IRQHandler
	.thumb_set I2C3_ER_IRQHandler,Default_Handler

	.weak	SAI1_IRQHandler
	.thumb_set SAI1_IRQHandler,Default_Handler

	.weak	SAI2_IRQHandler
	.thumb_set SAI2_IRQHandler,Default_Handler

	.weak	TSC_IRQHandler
	.thumb_set TSC_IRQHandler,Default_Handler

	.weak	RNG_IRQHandler
	.thumb_set RNG_IRQHandler,Default_Handler

	.weak	HASH_IRQHandler
	.thumb_set HASH_IRQHandler,Default_Handler

	.weak	LPTIM3_IRQHandler
	.thumb_set LPTIM3_IRQHandler,Default_Handler

	.weak	SPI3_IRQHandler
	.thumb_set SPI3_IRQHandler,Default_Handler

	.weak	I2C4_ER_IRQHandler
	.thumb_set I2C4_ER_IRQHandler,Default_Handler

	.weak	I2C4_EV_IRQHandler
	.thumb_set I2C4_EV_IRQHandler,Default_Handler

	.weak	DFSDM1_FLT0_IRQHandler
	.thumb_set DFSDM1_FLT0_IRQHandler,Default_Handler

	.weak	DFSDM1_FLT1_IRQHandler
	.thumb_set DFSDM1_FLT1_IRQHandler,Default_Handler

	.weak	DFSDM1_FLT2_IRQHandler
	.thumb_set DFSDM1_FLT2_IRQHandler,Default_Handler

	.weak	DFSDM1_FLT3_IRQHandler
	.thumb_set DFSDM1_FLT3_IRQHandler,Default_Handler

	.weak	UCPD1_IRQHandler
	.thumb_set UCPD1_IRQHandler,Default_Handler

	.weak	ICACHE_IRQHandler
	.thumb_set ICACHE_IRQHandler,Default_Handler

	.weak	SystemInit

/************************ (C) COPYRIGHT STMicroelectonics *****END OF FILE****/
